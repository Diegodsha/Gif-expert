{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Hooks/useFetchGifs.js","Components/GifGridItem.js","Components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","useFetchGif","imgs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMAkCeA,MA/Bf,YAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAEEC,mBAAS,IAFX,mBAE3BC,EAF2B,KAEfC,EAFe,KAgBpC,OACE,qCACE,8CACA,sBAAMC,SAXa,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAIP,GAAJ,mBAAkBO,OAC1CN,EAAc,MAOpB,SAEE,uBACAO,KAAK,OACLC,MAAOT,EACPU,SApBsB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,gB,8BCUhBG,EAlBH,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACLC,EADK,iDAEiCC,UAAUH,GAF3C,+DAGQI,MAAMF,GAHd,cAGTG,EAHS,gBAIMA,EAASC,OAJf,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,IACxB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BZ,QAI3Ca,QAAQC,IAAIR,GAdG,kBAeRA,GAfQ,4CAAH,sDCoBGS,EAjBK,SAACjB,GAAc,IAAD,EACNd,mBAAS,CACjCgC,KAAM,GACNC,SAAS,IAHqB,mBACzBC,EADyB,KAClBC,EADkB,KAchC,OARAC,qBAAU,WACRvB,EAAOC,GAAUuB,MAAK,SAACb,GACrBW,EAAS,CACPH,KAAMR,EACNS,SAAS,SAGZ,CAACnB,IACGoB,GCLMI,EAVK,SAAC,GAAuB,EAArBb,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEhC,OACE,sBAAKuB,UAAU,yCAAf,UACE,qBAAKC,IAAKxB,EAAKyB,IAAKf,IACpB,4BAAIA,QCyBKgB,EA3BC,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAAe,EAEPiB,EAAYjB,GAA5BmB,EAFuB,EAEvBA,QAAQD,EAFe,EAEfA,KAQjB,OACI,qCACA,oBAAIO,UAAU,oCAAd,SAAmDzB,IACrD,sBAAKyB,UAAU,YAAf,UACGN,GAAW,mBAAGM,UAAU,oCAAb,wBAGRP,EAAKT,KAAI,SAAAC,GAAG,OACZ,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBmB,IAAKnB,EAAIC,gBCD1BmB,MAlBf,WAAwB,MAEc5C,mBAAS,CAAC,cAFxB,mBAEfQ,EAFe,KAEHT,EAFG,KAItB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACGS,EAAWe,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCV5C+B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.1eaa2f11.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nfunction AddCategory({setCategories}) {\n\n    const [inputValue, setinputValue] = useState('')\n\n    const handelInputChange = (e) => {\n        setinputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        if (inputValue.trim().length > 2) { \n            setCategories(categories =>[inputValue,...categories])\n            setinputValue('')\n        }\n    }\n\n  return (\n    <>\n      <h2>Add Category</h2>\n      <form onSubmit={handleSubmit}>\n        {/* <button type=\"submit\">agregar</button> */}\n        <input \n        type=\"text\" \n        value={inputValue}\n        onChange={handelInputChange}\n        />\n      </form>\n    </>\n  );\n}\n\nexport default AddCategory;\n\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n}","const getGif = async (category) => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5Vd1ZdNtTdeUO4Z0rHQv4xD0Kty0UaI7`;\nconst response = await fetch(url);\nconst {data} = await response.json();\n\nconst gifs = data.map (img=>{\n    return{\n        id:img.id,\n        title:img.title,\n        url: img.images?.downsized_medium?.url\n    }\n})\n\nconsole.log(gifs);\nreturn gifs\n};\n\nexport default getGif","import { useState, useEffect } from 'react';\nimport getGif from '../Helpers/getGifs';\n\nconst useFetchGif = (category) => {\n  const [state, setState] = useState({\n    imgs: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGif(category).then((img) => {\n      setState({\n        imgs: img,\n        loading: false,\n      });\n    });\n  }, [category]);\n  return state;\n};\n\nexport default useFetchGif;\n","import React from 'react';\n\nconst GifGridItem = ({ id, title, url }) => {\n//   console.log(id, title, url);\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport useFetchGif from '../Hooks/useFetchGifs';\n// import getGif from '../Helpers/getGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n    const {loading,imgs} = useFetchGif(category)\n    // console.log(loading,imgs);\n    // const [Images, setImages] = useState([])\n\n    // useEffect(()=>{\n    //     getGif(category).then(setImages)\n    // },[category])\n\n  return (\n      <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n    <div className=\"card-grid\">\n      {loading && <p className=\"animate__animated animate__bounce\">Loading...</p>}\n\n      {\n          imgs.map(img=>(\n          <GifGridItem {...img} key={img.id}/>\n              )\n          )\n      }\n    </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import React, { useState } from 'react';\nimport AddCategory from './Components/AddCategory';\nimport GifGrid from './Components/GifGrid';\n\nfunction GifExpertApp() {\n  // const categories = ['One Punch','Samurai-X', 'Dragon Ball']\n  const [categories, setCategories] = useState(['One Punch']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </>\n  );\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp  from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}